/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csc545groupproject.Views;
import csc545groupproject.Controllers.RecipeManager;
import csc545groupproject.Models.Recipe;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class AccessRecipesJFrame extends javax.swing.JFrame {
    
    private AddRecipeJFrame addRecipeJF;
    public ArrayList<Recipe> recipes;
//    String selectedRecipeName = "";
//    public String selectedRecipeCategory = "";
//    public String selectedRecipeInstructions = "";
    private JFrame presenter;
    private JDialog dialog;
   
    public AccessRecipesJFrame() {
        initComponents();
//        searchRecipeLabel.setVisible(false);
//        searchRecipeTextField.setVisible(false);
//        searchButton.setVisible(false);
//        clearSearchButton.setVisible(false);
        
        this.recipes = RecipeManager.getRecipesFromDb();
        
        populateTable(true);
        
    }
    
    public AccessRecipesJFrame(JDialog dialog, JFrame presenter) {
        initComponents();
        
        this.dialog = dialog;
        this.presenter = presenter;
        this.recipes = RecipeManager.getRecipesFromDb();
        
        populateTable(true);
    }
    
    public void populateTable(boolean doFetchRecipes) {
        if (doFetchRecipes) {
            recipes = RecipeManager.getRecipesFromDb();
        }
        
        int numRows = recipes.size();
        DefaultTableModel dtm = (DefaultTableModel) recipeTable.getModel();
        dtm.setNumRows(0);
        dtm.setNumRows(numRows);

        //Food[] foods = (Food[]) recipe.ingredients.keySet().toArray(new Food[0]);
        //Integer[] quantities = (Integer[]) recipe.ingredients.values().toArray(new Integer[0]);
        for (int i = 0; i < numRows; i++) {
            String recipeName = recipes.get(i).getName();
            String recipeInstructions = recipes.get(i).getInstructions();
            String recipeCategory = recipes.get(i).getCategory();
            
            HashMap ingredients = (HashMap) recipes.get(i).getIngredients();
            
            recipeTable.setValueAt(recipeName, i, 0);
            recipeTable.setValueAt(recipeInstructions, i, 1);
            recipeTable.setValueAt(recipeCategory, i, 2);
            recipeTable.setValueAt(ingredients.toString(), i, 3);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        recipeTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        searchRecipeLabel = new javax.swing.JLabel();
        searchRecipeTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        clearSearchButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        addNewRecipeButton = new javax.swing.JButton();
        editRecipeButton = new javax.swing.JButton();
        deleteRecipeButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        recipeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Recipe Name", "Instructions", "Category", "Ingredients"
            }
        ));
        recipeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                recipeTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(recipeTable);

        searchRecipeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        searchRecipeLabel.setText("<html>Search Recipes by Ingredients or Category</html>");
        searchRecipeLabel.setToolTipText("");
        searchRecipeLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        searchRecipeLabel.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        searchRecipeTextField.setText("Enter Food or Category");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        clearSearchButton.setText("Clear Search");
        clearSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(searchRecipeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(searchButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearSearchButton))
                        .addComponent(searchRecipeTextField)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchRecipeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchRecipeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearSearchButton)
                    .addComponent(searchButton))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        addNewRecipeButton.setText("Add New Recipe");
        addNewRecipeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewRecipeButtonActionPerformed(evt);
            }
        });

        editRecipeButton.setText("Modify Selected Recipe");
        editRecipeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRecipeButtonActionPerformed(evt);
            }
        });

        deleteRecipeButton2.setText("Delete Selected Recipe");
        deleteRecipeButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecipeButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(editRecipeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addNewRecipeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteRecipeButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addNewRecipeButton)
                .addGap(33, 33, 33)
                .addComponent(editRecipeButton)
                .addGap(48, 48, 48)
                .addComponent(deleteRecipeButton2)
                .addContainerGap())
        );

        addNewRecipeButton.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteRecipeButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRecipeButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = recipeTable.getSelectedRow();
        if (selectedRow != -1) { //for null
            Recipe selectedRecipe = recipes.get(selectedRow);
            if (JOptionPane.showConfirmDialog(this, String.format("Are you sure you delete the recipe for %s?", selectedRecipe.getName())) == JOptionPane.YES_OPTION) {
                RecipeManager.deleteRecipeFromDb(selectedRecipe);
                recipes.remove(selectedRecipe);

                populateTable(true);
            }
        } else {
            System.out.println("No recipe selected");
        }
    }//GEN-LAST:event_deleteRecipeButton2ActionPerformed

    private void editRecipeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editRecipeButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = recipeTable.getSelectedRow();
        if (selectedRow == -1) return;

        Recipe selectedRecipe = recipes.get(selectedRow);

        JDialog frame = new JDialog(this, "Edit Recipe", true);
        frame.getContentPane().add(new ModifyRecipeJFrame(frame, this, selectedRecipe).mainPanel);
        frame.pack();
        frame.setVisible(true);
    }//GEN-LAST:event_editRecipeButtonActionPerformed

    private void addNewRecipeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewRecipeButtonActionPerformed
        // TODO add your handling code here:
        JDialog frame = new JDialog(this, "Add Recipe", true);
        frame.getContentPane().add(new AddRecipeJFrame(frame, this).mainPanel);
        frame.pack();
        frame.setVisible(true);
        //close();
    }//GEN-LAST:event_addNewRecipeButtonActionPerformed

    private void clearSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSearchButtonActionPerformed
        // TODO add your handling code here:
        searchRecipeTextField.setText("");
        populateTable(true);
        //        searchRecipeLabel.setVisible(false);
        //        searchRecipeTextField.setVisible(false);
        //        searchButton.setVisible(false);
        //        clearSearchButton.setVisible(false);
    }//GEN-LAST:event_clearSearchButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:

        String query = searchRecipeTextField.getText();
        recipes = RecipeManager.searchRecipesByNameAndCategory(query);

        if (recipes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Search returned no results!");
        }
        
        System.out.println(recipes.toString());

        populateTable(false);

        //        int numRows = recipes.size();
        //        String[] recipeNames = new String[numRows];
        //        String[] recipeInstructions = new String[numRows];
        //        String[] recipeCategory = new String[numRows];
        //        //Food[] foods = new Food[]();
        //
        //        //Integer[] quantities = (Integer[]) recipe.ingredients.values().toArray(new Integer[0]);
        //        for (int i = 0; i < numRows; i++) {
            //            recipeNames[i] = recipes.get(i).getName();
            //            recipeInstructions[i] = recipes.get(i).getInstructions();
            //            recipeCategory[i] = recipes.get(i).getCategory();
            //            HashMap ingredients = (HashMap) recipes.get(i).getIngredients().get(i);
            //
            //            if (search.matches(recipeCategory[i]) == true || search.equals(ingredients) == true) {
                //                return;
                //            } else {
                //                recipeTable.remove(i);
                //            }
            //        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void recipeTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recipeTableMouseReleased
        // https://stackoverflow.com/questions/10128064/jtable-selected-row-click-event
    }//GEN-LAST:event_recipeTableMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccessRecipesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccessRecipesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccessRecipesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccessRecipesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccessRecipesJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewRecipeButton;
    private javax.swing.JButton clearSearchButton;
    private javax.swing.JButton deleteRecipeButton2;
    private javax.swing.JButton editRecipeButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JPanel mainPanel;
    private javax.swing.JTable recipeTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchRecipeLabel;
    private javax.swing.JTextField searchRecipeTextField;
    // End of variables declaration//GEN-END:variables
}
